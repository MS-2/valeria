{"version":3,"sources":["Contexto.js","header.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","ContextUser","createContext","Provider","props","useState","fetch","setfetch","isAuth","setisAuth","token","settoken","err","seterr","user","setuser","users","setusers","companys","setcompanys","id","setid","time","settime","rols","setrols","open","setopen","get","then","response","data","catch","error","console","log","useEffect","a","request","fetchdata","value","cleanERROR","logout","children","withRouter","setOpen","contexto","useContext","logut","history","location","fixed","icon","onClick","JSON","stringify","pathname","alignEnd","push","modal","onClose","name","email","Home","logError","setlogError","onSubmit","e","preventDefault","formData","FormData","target","entries","input","post","decode","msg","type","defaultValue","autoComplete","Empresa","options","headers","setresponse","crear","empresa","objeto","style","backgroundColor","borderRadius","margin","Form","color","Group","controlId","Label","Control","placeholder","Row","as","Col","Button","variant","Usuario","message","crearRol","rol","display","width","flexWrap","flex","Text","className","Check","label","block","Main","empresas","usuarios","roles","listaDiv","map","key","_id","borderStyle","height","justifyContent","Lista","setEma","setID","search","setSearch","filteredUsers","setfilteredUsers","filter","includes","Test","index","to","onChange","checkEmail","checked","checkId","Table","striped","bordered","hover","Child","userId","useParams","role","test","navigator","userAgent","isPhone","useHistory","textAlign","Image","src","roundedCircle","marginTop","Badge","pill","patch","updateRole","custom","disabled","marginBottom","delete","Example","userIdfronLocation","slice","relatives","setrelatives","isloaded","setisloaded","dir","refetch","Childz","App","boo","basename","process","context","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","publicUrl","URL","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f0903384.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\naxios.defaults.baseURL =  'https://valeria-server.herokuapp.com/';\r\n// axios.defaults.baseURL =  'http://localhost:4000/';\r\nexport const ContextUser = createContext();\r\n\r\nconst Provider = (props) => {\r\n\r\n      /** => condicion para TODAS las llamadas a fetch asyncronas @type {bool} */ /**/\r\n    const [fetch, setfetch] = useState(false);\r\n\r\n      /** => validacion de autenticacionn @type {bool} */ /**/\r\n    const [isAuth, setisAuth] = useState(false);\r\n\r\n      /** => token de usuario activo @type {string} */ /**/\r\n    const [token, settoken] = useState(\"\");\r\n    \r\n      /** => manejador de errores de inicio de sesion @type {string} */ /**/\r\n    const [err, seterr] = useState(\"\");\r\n\r\n      /** => EL de USUARIO ACTIVO en el sistema @type {array} */ /**/\r\n    const [user, setuser] = useState({});\r\n\r\n      /** => LOS usuarios en el sistema @type {array} */ /**/\r\n    const [users, setusers] = useState([]);\r\n\r\n      /** => lista de compañias en el sistema @type {array} */ /**/\r\n    const [companys, setcompanys] = useState([]);\r\n\r\n      /** => id del usuario activo en sesion @type {string} */ /**/\r\n    const [id, setid] = useState(\"\");\r\n\r\n      /** => control para login del usuario activo en sesion @type {bool} */ /**/\r\n    const [time, settime] = useState(true);\r\n\r\n      /** => lista de roles de usuarios @type {array} */ /**/\r\n    const [rols, setrols] = useState([]);\r\n\r\n     /** => control de abierto/cerrado para el panel lateral derecho @type {bool} */ /**/\r\n    const [open, setopen] = useState();\r\n\r\n    //GET THE ACTUAL USER ID / se activa al iniciar sesion comprueba y retorna el id del usuario activo\r\n    if (isAuth && time) {     \r\n        axios.get(\"api/user/\"+id)     \r\n        .then(response => {\r\n        setuser(response.data)\r\n        settime(false)\r\n        })\r\n        .catch(error => {\r\n        console.log(error)\r\n        })\r\n    }\r\n// cuando se registra, modifica o elimina una compañia esta funcion refresca la data mostrada en pantalla \r\n    useEffect(() => {\r\n        async function fetchdata(){\r\n          const request = await axios.get(\"api/company\");\r\n          setcompanys(request.data)\r\n          return request\r\n        }\r\n        fetchdata();\r\n        return setfetch(false);\r\n      }, [fetch]);\r\n\r\n// cuando se registra, modifica o elimina un usuario esta funcion refresca la data mostrada en pantalla \r\n    useEffect(() => {\r\n        async function fetchdata(){\r\n          const request = await axios.get(\"api/user\");\r\n          setusers(request.data)\r\n          return request\r\n        }\r\n        fetchdata();\r\n        return setfetch(false);\r\n      }, [fetch]);\r\n\r\n// cuando se registra, modifica o elimina un role de un usuario esta funcion refresca la data mostrada en pantalla \r\n    useEffect(() => {\r\n        async function fetchdata(){\r\n          const request = await axios.get(\"api/role\");\r\n          setrols(request.data)\r\n          return request\r\n        }\r\n        fetchdata();\r\n        return setfetch(false);\r\n      }, [fetch]);\r\n\r\n      //funcion para hacer logout, aun le falta colocar validaciones\r\n    const logout = () => {\r\n        setisAuth(false);\r\n        settoken(\"\");\r\n        setuser({});\r\n        setid(\"\");\r\n    }\r\n\r\n//funcion para limpiar el registro de errores\r\n    const cleanERROR = () => {\r\n       seterr('')\r\n    }\r\n\r\n    return (\r\n      // si comienza con set es una funcion , las demas son variables GLOBALES\r\n        <ContextUser.Provider value={{\r\n            open,\r\n            setopen,\r\n            user,\r\n            setuser,\r\n            id,\r\n            setid,\r\n            err,\r\n            seterr,\r\n            token,\r\n            settoken,\r\n            isAuth,\r\n            setisAuth,\r\n            cleanERROR,\r\n            logout,\r\n            users,\r\n            setusers,\r\n            setcompanys,\r\n            setfetch,\r\n            fetch,\r\n            companys,\r\n            rols\r\n        }}>\r\n            {props.children}\r\n        </ContextUser.Provider>\r\n    )\r\n}\r\n\r\n// export default withRouter(UserContextProvider);\r\nexport default Provider;","import React, { useContext, useState } from 'react';\nimport { TopAppBar, TopAppBarRow, TopAppBarSection, TopAppBarNavigationIcon, TopAppBarTitle, TopAppBarActionItem, TopAppBarFixedAdjust, } from '@rmwc/top-app-bar';\nimport { Drawer, DrawerHeader, DrawerTitle, DrawerSubtitle, DrawerContent } from '@rmwc/drawer';\nimport { List, ListItem, ListItemGraphic } from '@rmwc/list'\nimport { withRouter  } from \"react-router-dom\";\nimport '@rmwc/top-app-bar/styles';\nimport '@rmwc/drawer/styles';\nimport '@rmwc/list/styles';\nimport '@rmwc/icon/styles';\nimport { ContextUser } from './Contexto';\n\nconst Header = (props) => {\n\tconst [open, setOpen] = useState(false);\n\tconst contexto = useContext(ContextUser);\n\tconst logut = contexto.logout;\n\tconst { history, location } = props;\n\treturn (\n\t\t<>\n\t\t\t<TopAppBar fixed>\n\t\t\t\t<TopAppBarRow>\n\t\t\t\t\t<TopAppBarSection >\n\t\t\t\t\t\t<TopAppBarNavigationIcon icon=\"menu\" onClick={() => setOpen(!open)} />\n\t\t\t\t\t\t<TopAppBarTitle>Home Valeria+{JSON.stringify(location.pathname)}</TopAppBarTitle>\n\t\t\t\t\t</TopAppBarSection>\n\t\t\t\t\t<TopAppBarSection alignEnd>\n\t\t\t\t\t\t<TopAppBarActionItem onClick={() => history.push('/')} icon=\"home\" />\n\t\t\t\t\t\t<TopAppBarActionItem icon=\"settings\" />\n\t\t\t\t\t</TopAppBarSection>\n\t\t\t\t</TopAppBarRow>\n\t\t\t</TopAppBar>\n\t\t\t<TopAppBarFixedAdjust />\n\t\t\t<Drawer modal open={open} onClose={() => setOpen(false)}>\n\t\t\t\t<DrawerHeader>\n\t\t\t\t\t<DrawerTitle>Bienvenido : {contexto.user.name}</DrawerTitle>\n\t\t\t\t\t<DrawerSubtitle>correo : {contexto.user.email} </DrawerSubtitle>\n\t\t\t\t</DrawerHeader>\n\t\t\t\t<DrawerContent>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<ListItem onClick={() => history.push('/empresa/crear')}>registrar empresa</ListItem>\n\t\t\t\t\t\t<ListItem onClick={() => history.push('/usuario/crear')}><ListItemGraphic icon=\"person\" />registrar usuario</ListItem>\n\t\t\t\t\t\t<ListItem onClick={() => history.push('/usuario/lista')}><ListItemGraphic icon=\"list\" />lista de usuarios</ListItem>\n\t\t\t\t\t\t<ListItem onClick={() => logut()}>cerrar sesion</ListItem>\n\t\t\t\t\t</List>\n\t\t\t\t</DrawerContent>\n\t\t\t</Drawer>\n\t\t</>\n\t);\n}\nexport default withRouter(Header);\n","import React, { useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { ContextUser } from './Contexto';\r\nimport decode from 'jwt-decode';\r\n\r\nexport const Home = () => {\r\n  const contexto = useContext(ContextUser);\r\n  const [logError, setlogError] = useState();\r\n  const start = e => {\r\n    e.preventDefault();\r\n    let formData = new FormData(e.target);\r\n    let user = {};\r\n    for (let input of formData.entries()) { user[input[0]] = input[1]; }\r\n\r\n    axios.post(\"api/auth/signin\", user)\r\n      .then(response => {\r\n        // console.log(contexto)\r\n        contexto.setisAuth(true);\r\n        contexto.settoken(response.data.token);\r\n        let id = decode(response.data.token);\r\n        contexto.setid(id.id);\r\n      })\r\n      .catch(error => {\r\n        setlogError(error.response.data.msg);\r\n        console.log(error.response.data.msg);\r\n      });\r\n  };\r\n  return (\r\n    <form onSubmit={start}>\r\n      <input type=\"email\" name=\"email\" defaultValue=\"admin@localhost\" />\r\n      <input type=\"password\" name=\"pass\" autoComplete=\"true\" defaultValue=\"admin\" />\r\n      <button>Log In</button>\r\n      {logError}\r\n      <div>hola.</div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, useParams, Link, useHistory } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport { Col, Row, Image, Badge } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { ContextUser } from './Contexto';\nimport Header from './header';\nimport '@rmwc/chip/styles';\nimport '@rmwc/tooltip/styles';\nimport { Home } from './Home';\nimport { Drawer, DrawerHeader, DrawerTitle, DrawerContent } from '@rmwc/drawer';\nimport { List, ListItem, ListItemGraphic } from '@rmwc/list'\n\n\nfunction App() {\n\n  const [boo, setboo] = useState(false);\n  const user = useContext(ContextUser);\n\n\n  if (!user.isAuth)\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route component={() => <Redirect to=\"/\" />} />\n        </Switch>\n\n      </Router>\n    )\n\n  else if (user.isAuth && !boo)\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header></Header>\n        {user.open ? <Example context={user.users}></Example> : null}\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/empresa/crear\" component={Empresa} />\n          <Route exact path=\"/usuario/crear\" component={Usuario} />\n          <Route exact path=\"/usuario/lista\" component={Lista} />\n          <Route path=\"/usuario/lista/:userId\" children={<Child />} />\n          <Route path=\"/empresa/:id\" children={<Childz />} />\n          <Route component={() => <div>no found</div>} />\n        </Switch>\n      </Router>\n    )\n\n  else if (user.isAuth && boo)\n    return (\n      <div>company</div>\n    )\n\n  else\n    return (\n      <div>NotFoundfound</div>\n    )\n}\n\nconst Empresa = () => {\n  const contexto = useContext(ContextUser);\n  const options = { headers: { 'x-access-token': contexto.token } };\n  const [response, setresponse] = useState();\n  /** => funcion para crear empresa app @type {Object} */ /**/\n  const crear = async (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const empresa = {} = formData.entries();\n\n    for (let input of formData.entries()) {\n      empresa[input[0]] = input[1]\n    }\n    axios.post(\"api/company\", { \"empresa\": empresa }, options)\n      .then(response => {\n        setresponse(\"empresa creado con exito\");\n        const objeto = response.data;\n        contexto.setcompanys(objeto);\n        contexto.setfetch(true);\n      })\n      .catch(error => {\n        setresponse(\"error faltan datos : \" + error.response.data);\n      })\n  }\n\n  return (\n    <div style={{ backgroundColor: \"pink\", borderRadius: 20, margin: 10 }}>\n\n\n      <Form onSubmit={crear} style={{ margin: 40 }} >\n        {response ? <div style={{ backgroundColor: \"green\", color: \"white\" }}>{response}</div> : null}\n        <Form.Group controlId=\"name\">\n          <Form.Label>Nombre Comercial</Form.Label>\n          <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter name\" defaultValue=\"origo\" />\n        </Form.Group>\n\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"rsocial\">\n            <Form.Label>Razon social:</Form.Label>\n            <Form.Control type=\"text\" name=\"rsocial\" placeholder=\"razon social\" defaultValue=\"chocolates\" />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"nit\">\n            <Form.Label>NIT:</Form.Label>\n            <Form.Control type=\"text\" name=\"nit\" placeholder=\"numero de identificacion tributaria\" defaultValue=\"123456\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"direccion\">\n          <Form.Label>Direccion</Form.Label>\n          <Form.Control type=\"text\" name=\"direccion\" placeholder=\"1234 Main St\" defaultValue=\"colpayo 849 piso 1 apt 4\" />\n        </Form.Group>\n\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"city\">\n            <Form.Label>Ciudad</Form.Label>\n            <Form.Control placeholder=\"ciudad\" name=\"city\" defaultValue=\"buenos aires\" />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridState\">\n            <Form.Label>Estado</Form.Label>\n            <Form.Control as=\"select\" defaultValue=\"Choose...\">\n              <option>Elegir...</option>\n              <option>...</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridZip\">\n            <Form.Label>Zip</Form.Label>\n            <Form.Control placeholder=\"zipcode\" name=\"zip\" defaultValue=\"1405\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"email-e\">\n          <Form.Label>Correo Electronico de la Empresa</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email-e\" defaultValue=\"company@gmail.com\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"Telefono Empresarial\">\n          <Form.Label>Telefono Fijo</Form.Label>\n          <Form.Control type=\"tel\" placeholder=\"telefono de la empresa\" name=\"telefono\" defaultValue=\"1121607577\" />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Guardar</Button>\n      </Form>\n\n      <pre>{JSON.stringify(contexto.companys, null, 2)}</pre>\n    </div>\n\n  );\n}\n\nconst Usuario = () => {\n  const contexto = useContext(ContextUser);\n  const token = contexto.token;\n  const options = { headers: { 'x-access-token': token } };\n  const [response, setresponse] = useState('');\n  const crear = async (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const user = {}\n    for (let input of formData.entries()) {\n      user[input[0]] = input[1]\n    }\n    axios.post(\"api/user\", user, options)\n      .then(response => {\n        contexto.setfetch(true)\n        setresponse(\"usuario : \" + response.data.name + \"creado con exito\")\n        // console.log(\"usuario creado : \", response.data)\n      })\n      .catch(error => {\n        setresponse(error.response.data.message)\n        // console.log(error.response.data.message)\n      })\n  }\n\n  const crearRol = async (e) => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const rol = {}\n    for (let input of formData.entries()) {\n      rol[input[0]] = input[1]\n    }\n    axios.post(\"api/role\", rol, options)\n      .then(response => {\n        contexto.setfetch(true)\n        // console.log(\"rol creado : \", response.data)\n      })\n      .catch(error => {\n        console.log(error.response)\n      })\n  }\n\n  return (\n    <div style={{ display: \"flex\", width: 100 + \"%\", flexWrap: \"wrap\" }}>\n\n      <div style={{ flex: 1, backgroundColor: \"pink\" }}>\n        <Form onSubmit={crear} style={{margin:40}}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Nombre completo</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Nombre completo\" name=\"name\" />\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"pass\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" name=\"pass\" />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n          </Form.Group>\n          <Button block variant=\"primary\" type=\"submit\">crear usuario</Button>\n        </Form>\n        {response ? <div style={{ backgroundColor: \"green\", color: \"white\" }}>{response}</div> : null}\n        <pre>{JSON.stringify(contexto.users, [\"_id\", \"email\", \"name\"], 1)}</pre>\n      </div>\n\n      <div style={{ flex: 1, backgroundColor: \"greenyellow\" }}>\n        <Form onSubmit={crearRol}>\n          <Form.Group controlId=\"name\" style={{margin:40}}>\n            <Form.Label>nombre del rol</Form.Label>\n            <Form.Control type=\"text\" name=\"name\" />\n            <Form.Text className=\"text-muted\">\n            Introduzca nombre descriptivo para el rol\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>description</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"description\" name=\"description\" />\n          </Form.Group>\n          <Button block variant=\"success\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <pre>roles{JSON.stringify(contexto.rols, [\"name\", \"description\"], 1)}</pre>\n      </div>\n\n    </div>\n  );\n}\n\nconst Main = (props) => {\n  const contexto = useContext(ContextUser);\n  const empresas = contexto.companys;\n  const usuarios = contexto.users;\n  const roles = contexto.rols;\n  const { history } = props;\n\n  const listaDiv = empresas.map((empresa) =>\n    <button key={empresa._id} style={{ margin: 5, borderStyle: \"solid\", backgroundColor: \"pink\", width: 300, height: 150 }}>\n      <div onClick={() => history.push('/empresa/' + empresa._id)}>\n        <div>\n          {empresa.empresa.name}\n        </div>\n        <div>\n          id : {empresa._id}\n        </div>\n      </div>\n    </button>\n  );\n  return (\n    <div>\n\n      <pre><h1>EMPRESAS</h1>{JSON.stringify(empresas, [\"_id\", \"name\", \"empresa\", \"nit\"], 2)}</pre>\n      <div>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n          {listaDiv}\n        </div>\n      </div>\n      <pre><h1>USUARIOS</h1>{JSON.stringify(usuarios, [\"_id\", \"email\"], 1)}</pre>\n      <pre><h1>ROLES</h1>{JSON.stringify(roles, null, 1)}</pre>\n    </div>\n  )\n}\n\nconst Lista = () => {\n  const contexto = useContext(ContextUser);\n  const usuarios = contexto.users\n  const [email, setEma] = useState(\"email\");\n  const [_id, setID] = useState(\"_id\");\n  const [search, setSearch] = useState(\"\");\n  const [filteredUsers, setfilteredUsers] = useState([]);\n  useEffect(() => {\n    setfilteredUsers(\n      usuarios.filter((user) =>\n        user.email.includes(search)\n      )\n    )\n  }, [search]);\n\n  const checkEmail = e => { e ? setEma(\"\") : setEma(\"email\") }\n  const checkId = e => { e ? setID(\"\") : setID(\"_id\") }\n\n  const Test = () => {\n    return (\n      filteredUsers.map((user, index) =>\n\n        <tbody>\n          <tr>\n            <td>{index}</td>\n            <td><Link to={\"/usuario/lista/\" + user._id}>{user.email}</Link></td>\n            <td>{user.name}</td>\n            <td>{user._id}</td>\n          </tr>\n        </tbody>\n\n      )\n    )\n  }\n\n  return (\n    <div style={{margin:10}}>\n      <div>\n        <Form.Group>\n          <Form.Label>buscar por email</Form.Label>\n          <Form.Control type=\"search\" placeholder=\"buscar...\" onChange={(e) => setSearch(e.target.value)} width=\"50%\"style={{width:'40%'}} />\n        </Form.Group>\n        <input type=\"checkbox\" onChange={(e) => checkEmail(e.target.checked)} /><span>email</span>\n        <input type=\"checkbox\" onChange={(e) => checkId(e.target.checked)} /><span>_id</span>\n      </div>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>email</th>\n            <th>nombre</th>\n            <th>agun otro dato</th>\n          </tr>\n        </thead>\n        <Test></Test>\n      </Table>\n\n      <pre><h1>USUARIOS</h1>{JSON.stringify(filteredUsers, [_id, email], 1)}</pre>\n    </div>\n  )\n}\n\n\nfunction Child(props) {\n  const contexto = useContext(ContextUser);\n  const { userId } = useParams();\n  const options = { headers: { 'x-access-token': contexto.token } };\n  const [fetch, setfetch] = useState(false);\n  const [user, setuser] = useState({});\n  const [role, setrole] = useState();\n  const [rols, setrols] = useState([]);\n  const [response, setresponse] = useState(\"\");\n  // const [open, setOpen] = React.useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [isPhone, setisPhone] = useState(/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent));\n  const [filteredUsers, setfilteredUsers] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    setfilteredUsers(\n      rols.filter((user) =>\n        user.includes(search)\n      )                 \n    )\n  }, [search]);\n\n  useEffect(() => {\n console.log(response);\n\n  }, [response]);\n\n  useEffect(() => {\n    async function fetchdata() {\n      axios.get(\"api/user/\" + userId)\n        .then(response => {\n          let user = response.data;\n          setuser(user);\n          setrols(user.role);\n        })\n        .catch(error => {\n          console.log(error.response.data)\n        })\n    }\n    fetchdata();\n    return setfetch(false);\n  }, [fetch]);\n\n  useEffect(() => {\n    // console.log(isPhone)\n  }, [isPhone]);\n\n  const updateRole = (e) => {\n    axios.patch(\"api/user/\" + userId, { \"role\": e }, options)\n      .then(response => {\n        contexto.setfetch(true);\n        setfetch(true);\n        setresponse(\"\")\n      })\n      .catch(error => {\n        setresponse(error.response.data.message)\n        console.log(error.response.data.message)\n      })\n  }\n\n  const eliminarRol = (rol) => {\n    if (rol === \"admin\") return\n    axios.patch(\"api/user/remove/\" + userId, { \"role\": rol }, options)\n      .then(response => {\n        setresponse(\"\")\n        contexto.setfetch(true);\n        setfetch(true);\n      })\n      .catch(error => {\n        setresponse(error.response.data.message)\n        // console.log(error.response.data.message)\n      })\n  }\n\n  const pushUser = (id) => {\n    axios.patch(\"api/user/adduser/\" + userId, { \"id\": id }, options)\n      .then(response => {\n        contexto.setfetch(true);\n        console.log(\"usuario actualizado : \", response.data);\n        setfetch(true);\n      })\n      .catch(error => {\n        // console.log(error.response.data.message)\n        setresponse(error.response.data.message)\n      })\n  }\n\n  const eliminarUser = (id) => {\n    console.log(id)\n    axios.delete(\"api/user/\" + id, options)\n      .then(response => {\n\n        contexto.setfetch(true);\n        history.push(\"/\");\n        setresponse(\"\")\n      })\n      .catch(error => {\n        setresponse(error.response.data)\n        console.log(error)\n      })\n  }\n\n\n\n  // if (!isPhone) { \n  return (\n    <div style={{ display: \"flex\", width: 100 + \"%\", height: 150 + \"vh\",  flexWrap: \"wrap\" }}>\n      \n      <div style={{ flex: 1, textAlign: \"center\" }}>\n        <div >\n          <Row>\n            <Col >\n              <Image onClick={() => console.log(\"foto\")} src={\"https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png\"} roundedCircle />\n            </Col>\n          </Row>\n          <Row style={{ marginTop: 10 }}>\n            <Col>\n              <h2>  {user.name}</h2>\n            </Col>\n          </Row>\n        </div>\n\n        <Table  >\n          <thead>\n            <tr>\n              <th>Email:</th>\n              <th>{user.email}</th>\n            </tr>\n          </thead>\n        </Table>\n      </div>\n\n\n      <div style={{ flex: 1, backgroundColor: \"pink\" }}>      {/* caja 2 */}\n      lista de roles:       {response}            \n        <div style={{ backgroundColor: \"crimson\", margin: 10, borderRadius:14 }}>\n       \n          <div>\n            <h3>\n              {rols.map(roles =>\n                <Badge pill variant=\"warning\">\n\n                  {roles}-\n\n                <spam style={{ color: \"red\" }} onClick={() => {\n                    if (roles === \"admin\") {\n                      setresponse(\"no puedes eliminar el admin\")\n                      // console.log(\"no puedes eliminar el admin\")\n                    } else {\n                      setresponse(\"\")\n                      eliminarRol(roles)\n                    }\n                  }}>x</spam>\n                </Badge>\n              )}\n            </h3>\n          </div>\n\n\n        </div>\n        <div>\n            <Form.Group onChange={e => updateRole(e.target.value)} value={role} style={{width:\"50%\" ,margin:3}}>\n              <Form.Control as=\"select\" custom>   \n                <option disabled=\"disabled\">--añadir roles/pulsar x roja para eliminar--</option>\n                {\n                  contexto.rols.map((role, index) => {\n                    return <option>{role.name}</option>\n                  }\n                  )\n                }\n              </Form.Control>\n            </Form.Group>\n          </div>\n\n        <div style={{ backgroundColor: \"green\", marginBottom: 10 }}>\n          <Form.Group onChange={e => pushUser(e.target.value)}  >\n            <Form.Label>selecciona un usuario para vincular a este usuario</Form.Label>\n            <Form.Control as=\"select\" custom>\n              {\n                contexto.users.map((user, index) => {\n                  return <option value={user._id}>{user.name}</option>;\n                }\n                )\n              }\n            </Form.Control>\n          </Form.Group>\n          <Button onClick={() => contexto.setopen(!contexto.open)}>doble tap para desplegar la lista de relaciones</Button>\n        </div>\n\n\n\n        <div style={{ backgroundColor: \"yellow\" }}>\n          <h4>empresas: {JSON.stringify(user.companys)}</h4>\n          <h4>empresas: {JSON.stringify(user, [\"companys\"])}</h4>\n        </div>\n        <Button onClick={() => eliminarUser(userId)} variant=\"danger\">\n          eliminar el usuario actual\n          </Button>\n      </div>\n\n    </div>\n  );\n  // } else {\n  //   return (\n  //     <div>otra cosa</div>\n  //   );\n  // }\n}\n\n\nfunction Example(props) {\n  const contexto = useContext(ContextUser);\n  let history = useHistory();\n  const userIdfronLocation = history.location.pathname.slice(15);\n  const [open, setOpen] = useState(true);\n  const [relatives, setrelatives] = useState([]);\n  const [isloaded, setisloaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchdata() {\n      await axios.get(\"api/user/\" + userIdfronLocation)\n        .then(response => {\n          let users = response.data.users;\n          console.log(users)\n          setrelatives(users)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n    fetchdata();\n    return setisloaded(true);\n  }, [isloaded]);\n\n  const refetch = (user) => {\n    contexto.setfetch(true);\n    history.push(\"/usuario/lista/\" + user._id)\n    contexto.setopen(false);\n  }\n\n  function usuarios() {\n    return relatives.map((user, index) => {\n      return (\n        <ListItem onClick={() => refetch(user)}>\n          {user.name}\n        </ListItem>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Drawer dir=\"rtl\" modal open={open} onClose={() => setOpen(false)}>\n        <DrawerHeader dir=\"ltr\">\n          <DrawerTitle>relaciones</DrawerTitle>\n        </DrawerHeader>\n        <DrawerContent dir=\"ltr\">\n          <List>\n            {isloaded ? usuarios() : \"Loading...\"}\n          </List>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\n\n\nfunction Childz() {\n  const contexto = useContext(ContextUser);\n  const { id } = useParams();\n  console.log(id)\n  const options = { headers: { 'x-access-token': contexto.token } };\n  return (\n    <div>otra cosa</div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    console.log(publicUrl)\n    if (publicUrl.origin !== window.location.origin) {\n      console.log(\"yalhallo\")\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      // console.log(\"file location\" + swUrl);\n      // registerValidSW(swUrl, config);\n\n      if (isLocalhost) {\n\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n\n\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // console.log(registration)\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from './Contexto';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/** => Provider es el contenedor global de la app @type {Object} */ /**/\n\n/** => Provider es el contenedor global de la app @type {Object} */ /**/\n\n/** => Provider es el contenedor global de la app @type {Object} */ /**/\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n"],"sourceRoot":""}